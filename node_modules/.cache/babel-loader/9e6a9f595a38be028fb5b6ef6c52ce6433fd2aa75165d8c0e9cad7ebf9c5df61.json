{"ast":null,"code":"// import React, { Component, useMemo } from \"react\";\n// import constructorStyles from './burger-constructor.module.css';\n// import { ConstructorElement, DragIcon, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import ingredientPropType from '../../utils/prop-types';\n// import PropTypes from 'prop-types';\n\n// const BurgerConstructor = (props) => {\n\n//   const totalPrice = props.data.reduce((sum, item) => sum + item.price, 0);\n\n//   const bun = useMemo(() => {\n//     return props.data.find((item) => item.type === 'bun');\n//   }, [props]);\n//   const sauce = React.useMemo(() => {\n//     return props.data.find(item => item.type === 'sauce')\n//   }, [props]);\n//   const main = React.useMemo(() => {\n//     return props.data.filter(item => item.type === 'filling')\n//   }, [props]);\n\n//   const RenderedIngredient = (item, type) => {\n//     return (\n//       <div key={item._id}>\n//         <DragIcon type=\"primary\" />\n//         <ConstructorElement text={type.name} price={type.price} thumbnail={type.image} />\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <section className={constructorStyles.section}>\n//       <div className={constructorStyles.box + ' custom-scroll'}>\n//         <div className={constructorStyles.ingredient}>\n//           {bun && <ConstructorElement type=\"top\" isLocked={true}\n//             text={bun.name + \"(верх)\"}\n//             price={bun.price}\n//             thumbnail={bun.image}\n//           />}\n//         </div>\n//         <div className={constructorStyles.ingredient}>\n//           <DragIcon type=\"primary\" />\n//           {bun && <ConstructorElement text={sauce.name}\n//             price={sauce.price}\n//             thumbnail={sauce.image}\n//           />}\n//         </div>\n//         {main.map(item => <RenderedIngredient key={item._id} {...item} />)}\n//         <div className={constructorStyles.ingredient}>\n//           {bun && <ConstructorElement type=\"bottom\" isLocked={true}\n//             text={bun.name + \"(низ)\"}\n//             price={bun.price}\n//             thumbnail={bun.image}\n//           />}\n//         </div>\n//       </div>\n//       <div className={constructorStyles.ordering}>\n//         <div className={constructorStyles.sum}>\n//           <p className=\"text text_type_main-large\">{totalPrice}</p>\n//           <CurrencyIcon type=\"primary\" />\n//         </div>\n//         <Button htmlType=\"button\" type=\"primary\" size=\"large\" onClick={() => props.setIsOpen(true)}>\n//           Оформить заказ\n//         </Button>\n//       </div>\n//     </section>\n//   )\n// }\n\n// BurgerConstructor.propTypes = {\n//   data: PropTypes.arrayOf(ingredientPropType).isRequired\n// }\n\n// export default BurgerConstructor;","map":{"version":3,"names":[],"sources":["/Users/hockeybear/Documents/GitHub/stellar-burgers/src/components/burger-constructor/burger-constructor.jsx"],"sourcesContent":["// import React, { Component, useMemo } from \"react\";\n// import constructorStyles from './burger-constructor.module.css';\n// import { ConstructorElement, DragIcon, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import ingredientPropType from '../../utils/prop-types';\n// import PropTypes from 'prop-types';\n\n// const BurgerConstructor = (props) => {\n  \n//   const totalPrice = props.data.reduce((sum, item) => sum + item.price, 0);\n\n//   const bun = useMemo(() => {\n//     return props.data.find((item) => item.type === 'bun');\n//   }, [props]);\n//   const sauce = React.useMemo(() => {\n//     return props.data.find(item => item.type === 'sauce')\n//   }, [props]);\n//   const main = React.useMemo(() => {\n//     return props.data.filter(item => item.type === 'filling')\n//   }, [props]);\n\n//   const RenderedIngredient = (item, type) => {\n//     return (\n//       <div key={item._id}>\n//         <DragIcon type=\"primary\" />\n//         <ConstructorElement text={type.name} price={type.price} thumbnail={type.image} />\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <section className={constructorStyles.section}>\n//       <div className={constructorStyles.box + ' custom-scroll'}>\n//         <div className={constructorStyles.ingredient}>\n//           {bun && <ConstructorElement type=\"top\" isLocked={true}\n//             text={bun.name + \"(верх)\"}\n//             price={bun.price}\n//             thumbnail={bun.image}\n//           />}\n//         </div>\n//         <div className={constructorStyles.ingredient}>\n//           <DragIcon type=\"primary\" />\n//           {bun && <ConstructorElement text={sauce.name}\n//             price={sauce.price}\n//             thumbnail={sauce.image}\n//           />}\n//         </div>\n//         {main.map(item => <RenderedIngredient key={item._id} {...item} />)}\n//         <div className={constructorStyles.ingredient}>\n//           {bun && <ConstructorElement type=\"bottom\" isLocked={true}\n//             text={bun.name + \"(низ)\"}\n//             price={bun.price}\n//             thumbnail={bun.image}\n//           />}\n//         </div>\n//       </div>\n//       <div className={constructorStyles.ordering}>\n//         <div className={constructorStyles.sum}>\n//           <p className=\"text text_type_main-large\">{totalPrice}</p>\n//           <CurrencyIcon type=\"primary\" />\n//         </div>\n//         <Button htmlType=\"button\" type=\"primary\" size=\"large\" onClick={() => props.setIsOpen(true)}>\n//           Оформить заказ\n//         </Button>\n//       </div>\n//     </section>\n//   )\n// }\n\n// BurgerConstructor.propTypes = {\n//   data: PropTypes.arrayOf(ingredientPropType).isRequired\n// }\n\n// export default BurgerConstructor;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}